import type { NextApiRequest, NextApiResponse } from 'next'
import NextCors from 'nextjs-cors'
import { attachIssueToGH } from 'src/bots/asana/attachIssue'
import { verifySignature } from 'util/crypto'

const handler = async (req: NextApiRequest, res: NextApiResponse) => {
	await NextCors(req, res, {
		origin: 'https://app.asana.com',
	})

	verifySignature({ service: 'asana', req, res })

	const submission: IssueSubmission = JSON.parse(req.body.data)

	const [owner, repo, issue] = submission.values.issue.split(
		','
	) as Array<string>

	if (
		typeof owner !== 'string' ||
		typeof repo !== 'string' ||
		typeof issue !== 'string'
	)
		return res.status(400).end()

	const attachedIssue = await attachIssueToGH({
		owner,
		repo,
		issue_number: parseInt(issue),
		asana_ticket: submission.task,
		asana_workspace: submission.workspace,
		attachment: submission.attachment,
	})
	res.status(200).json({
		resource_name: attachedIssue.title,
		resource_url: attachedIssue.attachedIssue.issueUrl,
		options: {
			fields: ['type', 'issue'],
		},
		type: 'githubIssue',
		issue: attachedIssue.attachedIssue.githubIssue,
	})
}

export default handler

// Generated by https://quicktype.io

export interface IssueSubmission {
	attachment: number
	asset: number
	user: number
	workspace: number
	expires: number
	expires_at: string
	locale: string
	values: Values
	task: number
}

export interface Values {
	repo: string
	issue: string
}
